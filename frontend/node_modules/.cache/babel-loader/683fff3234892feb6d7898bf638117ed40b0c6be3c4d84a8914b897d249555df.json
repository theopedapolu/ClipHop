{"ast":null,"code":"var _jsxFileName = \"/Users/theopedapolu/ClipHop/frontend/src/components/Crown.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Clock from './Clock';\nimport DeviceGroup from './DeviceGroup';\nimport { DndContext, useDndMonitor } from '@dnd-kit/core';\nimport DndIcon from './DnDIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generatePositions(numGroups) {\n  let radius = 13;\n  let positions = [];\n  if (numGroups === 1) {\n    positions.push([[\"1/2\", \"1/2\"]]);\n  } else {\n    let theta = 2 * Math.PI / numGroups;\n    for (let i = 0; i < numGroups; ++i) {\n      positions.push([(Math.round(radius * Math.cos(i * theta)) + 17.5 - 2.25).toString(), (17.5 - 1.125 - Math.round(radius * Math.sin(i * theta))).toString()]);\n    }\n  }\n  return positions;\n}\nfunction handleDragMove(event) {\n  console.log('Drag move event triggered');\n}\nfunction handleDragStart(event) {\n  console.log('Drag start event triggered');\n}\nfunction Crown() {\n  _s2();\n  var _s = $RefreshSig$();\n  //const [stopClock,setStopClock] = useState(false);\n\n  const [deviceGroups, setDeviceGroups] = useState([[{\n    id: 0,\n    name: 'skynet',\n    type: 'A'\n  }], [{\n    id: 1,\n    name: 'sky',\n    type: 'B'\n  }], [{\n    id: 2,\n    name: 'skys',\n    type: 'C'\n  }], [{\n    id: 3,\n    name: 'skynets',\n    type: 'D'\n  }]]);\n  const [groupColors, setGroupColors] = useState([\"bg-green-500\", \"bg-green-500\", \"bg-green-500\", \"bg-green-500\"]);\n  const addDeviceGroup = () => {\n    setDeviceGroups([...deviceGroups, [{\n      id: 1,\n      name: 'sky',\n      type: 'E'\n    }]]);\n  };\n  const removeDeviceGroup = () => {};\n  let positions = generatePositions(deviceGroups.length);\n  let ids = ['a', 'b', 'c', 'd'];\n  function handleDragOver(event) {\n    console.log('Drag over event triggered');\n    console.log(event);\n    if (event.over != null && event.over.id !== event.active.id) {\n      setGroupColors(groupColors.map((color, idx) => ids[idx] === event.over.id || ids[idx] === event.active.id ? \"bg-rose-500\" : color));\n      console.log(groupColors.map((color, idx) => ids[idx] === event.over.id || ids[idx] === event.active.id ? \"bg-rose-500\" : color));\n    }\n  }\n  function Monitor() {\n    _s();\n    useDndMonitor({\n      onDragOver(event) {\n        handleDragOver(event);\n      }\n    });\n  }\n  _s(Monitor, \"qZ3EevWvVO3mH5/aackxowyCAsg=\", false, function () {\n    return [useDndMonitor];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center w-full min-w-full max-w-full overflow-x-clip mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-[90vmin] h-[90vmin] md:w-[35rem] md:h-[35rem]\",\n      children: [/*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n        children: [/*#__PURE__*/_jsxDEV(Monitor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), deviceGroups.map((group, idx) => {\n          return /*#__PURE__*/_jsxDEV(DndIcon, {\n            iconId: ids[idx],\n            left: positions[idx][0],\n            top: positions[idx][1],\n            children: /*#__PURE__*/_jsxDEV(DeviceGroup, {\n              devices: group,\n              color: groupColors[idx]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n  function handleDragEnd(event) {\n    console.log('Drag end event triggered');\n    console.log(event.active);\n    console.log(event.over);\n  }\n}\n_s2(Crown, \"o3nzXv/DkC01o9z4bI7Ise3evb0=\");\n_c = Crown;\nexport default Crown;\nvar _c;\n$RefreshReg$(_c, \"Crown\");","map":{"version":3,"names":["React","useState","Clock","DeviceGroup","DndContext","useDndMonitor","DndIcon","jsxDEV","_jsxDEV","generatePositions","numGroups","radius","positions","push","theta","Math","PI","i","round","cos","toString","sin","handleDragMove","event","console","log","handleDragStart","Crown","_s2","_s","$RefreshSig$","deviceGroups","setDeviceGroups","id","name","type","groupColors","setGroupColors","addDeviceGroup","removeDeviceGroup","length","ids","handleDragOver","over","active","map","color","idx","Monitor","onDragOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","group","iconId","left","top","devices","handleDragEnd","_c","$RefreshReg$"],"sources":["/Users/theopedapolu/ClipHop/frontend/src/components/Crown.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Clock from './Clock';\nimport DeviceGroup from './DeviceGroup';\nimport {DndContext, useDndMonitor} from '@dnd-kit/core';\nimport DndIcon from './DnDIcon';\n\n\nfunction generatePositions(numGroups) {\n    let radius = 13;\n    let positions = [];\n    if (numGroups === 1) {\n        positions.push([[\"1/2\",\"1/2\"]]);\n    } else {\n        let theta = 2*Math.PI/numGroups;\n        for (let i = 0; i < numGroups; ++i) {\n            positions.push([(Math.round(radius*Math.cos(i*theta)) + 17.5-2.25).toString(),\n                (17.5-1.125-Math.round(radius*Math.sin(i*theta))).toString()]);\n        }\n    }\n    return positions;\n}\n\nfunction handleDragMove(event) {\n    console.log('Drag move event triggered');  \n}\n\nfunction handleDragStart(event) {\n    console.log('Drag start event triggered');\n}\n\nfunction Crown() {\n    //const [stopClock,setStopClock] = useState(false);\n    \n    const [deviceGroups, setDeviceGroups] = useState([\n        [{id:0, name:'skynet', type:'A'}],\n        [{id:1, name:'sky',type:'B'}],\n        [{id:2, name:'skys',type:'C'}],\n        [{id:3, name:'skynets', type:'D'}]\n    ]);\n\n    const [groupColors,setGroupColors] = useState([\"bg-green-500\",\"bg-green-500\",\"bg-green-500\",\"bg-green-500\"]);\n    \n    const addDeviceGroup = () => {\n        setDeviceGroups([...deviceGroups, [{id:1, name:'sky',type:'E'}]]);\n    };\n\n    const removeDeviceGroup = () => {\n\n    };\n\n    let positions = generatePositions(deviceGroups.length);\n    let ids = ['a','b','c','d'];\n\n    function handleDragOver(event) {\n        console.log('Drag over event triggered');\n        console.log(event);\n        if (event.over != null && event.over.id !== event.active.id) {\n            setGroupColors(groupColors.map((color,idx) => (ids[idx] === event.over.id || ids[idx] === event.active.id) ? \"bg-rose-500\" : color));\n            console.log(groupColors.map((color,idx) => (ids[idx] === event.over.id || ids[idx] === event.active.id) ? \"bg-rose-500\" : color));\n        }\n    }\n\n    function Monitor() {\n        useDndMonitor({\n            onDragOver(event) {handleDragOver(event)}\n        })\n    }\n\n\n    return (\n        <div className='flex flex-col items-center w-full min-w-full max-w-full overflow-x-clip mt-5'>\n        <div className='relative w-[90vmin] h-[90vmin] md:w-[35rem] md:h-[35rem]'>\n            <Clock/>\n            <DndContext>\n            <Monitor/>\n            {deviceGroups.map((group,idx) => {\n                return (\n                <DndIcon iconId={ids[idx]} key={idx} left={positions[idx][0]} top={positions[idx][1]}>\n                <DeviceGroup devices={group} color={groupColors[idx]}/>\n                </DndIcon>\n                )\n            })}\n            </DndContext>   \n        </div>\n        </div>\n    )\n\n    function handleDragEnd(event) {\n        console.log('Drag end event triggered');\n        console.log(event.active);\n        console.log(event.over);\n    }\n}\n\nexport default Crown;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}