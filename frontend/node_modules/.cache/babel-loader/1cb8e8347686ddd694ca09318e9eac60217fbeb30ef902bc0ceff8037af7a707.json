{"ast":null,"code":"var _jsxFileName = \"/Users/theopedapolu/ClipHop/frontend/src/components/Crown.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Clock from './Clock';\nimport DeviceGroup from './DeviceGroup';\nimport { DndContext, useDndMonitor } from '@dnd-kit/core';\nimport DndIcon from './DnDIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['bg-emerald-500', 'bg-sky-500', 'bg-rose-500', 'bg-amber-500', 'bg-violet-500'];\nfunction generatePositions(numGroups) {\n  let radius = 13;\n  let positions = [];\n  if (numGroups === 1) {\n    positions.push([[\"1/2\", \"1/2\"]]);\n  } else {\n    let theta = 2 * Math.PI / numGroups;\n    for (let i = 0; i < numGroups; ++i) {\n      positions.push([(Math.round(radius * Math.cos(i * theta)) + 17.5 - 4).toString(), (17.5 - 4 - Math.round(radius * Math.sin(i * theta))).toString()]);\n    }\n  }\n  return positions;\n}\nfunction handleDragMove(event) {\n  console.log('Drag move event triggered');\n}\nfunction handleDragStart(event) {\n  console.log('Drag start event triggered');\n}\nfunction Crown() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [spinClock, setSpinClock] = useState(true);\n  const [deviceGroups, setDeviceGroups] = useState([{\n    id: 1,\n    color: 'bg-rose-500',\n    devices: [{\n      id: 0,\n      name: 'skynet',\n      type: 'A'\n    }],\n    bubble: false\n  }, {\n    id: 2,\n    color: 'bg-blue-500',\n    devices: [{\n      id: 1,\n      name: 'sky',\n      type: 'B'\n    }],\n    bubble: false\n  }, {\n    id: 3,\n    color: 'bg-amber-500',\n    devices: [{\n      id: 2,\n      name: 'skys',\n      type: 'C'\n    }],\n    bubble: false\n  }, {\n    id: 4,\n    color: 'bg-emerald-500',\n    devices: [{\n      id: 3,\n      name: 'skynets',\n      type: 'D'\n    }],\n    bubble: false\n  }]);\n  const addDeviceGroup = (type, name) => {\n    let newId = 1;\n    for (group of deviceGroups) {\n      if (group.id != newId) {\n        break;\n      }\n      newId += 1;\n    }\n    setDeviceGroups([...deviceGroups, {\n      id: newId,\n      color: colors[newId],\n      devices: [{\n        id: 0,\n        name: 'sky',\n        type: type\n      }],\n      bubble: false\n    }]);\n  };\n  const mergeGroups = (id1, id2) => {};\n  const removeDevice = () => {};\n  let positions = generatePositions(deviceGroups.length);\n  function handleDragOver(event) {\n    console.log('Drag over event triggered');\n    console.log(event);\n    if (event.over == null || event.over.id === event.active.id) {\n      setDeviceGroups(deviceGroups.map(group => {\n        return {\n          ...group,\n          color: colors[group.id - 1],\n          bubble: group.devices.length > 1\n        };\n      }));\n    } else {\n      setDeviceGroups(deviceGroups.map(group => {\n        if (group.id === event.active.id) {\n          return {\n            ...group,\n            color: colors[event.over.id - 1],\n            bubble: group.devices.length > 1\n          };\n        } else if (group.id === event.over.id) {\n          return {\n            ...group,\n            color: colors[event.over.id - 1],\n            bubble: true\n          };\n        } else {\n          return {\n            ...group,\n            color: colors[group.id - 1],\n            bubble: group.devices.length > 1\n          };\n        }\n      }));\n    }\n  }\n  function handleDragEnd(event) {}\n  function Monitor() {\n    _s();\n    useDndMonitor({\n      onDragOver(event) {\n        handleDragOver(event);\n      },\n      onDragEnd(event) {\n        handleDragEnd(event);\n      }\n    });\n  }\n  _s(Monitor, \"qZ3EevWvVO3mH5/aackxowyCAsg=\", false, function () {\n    return [useDndMonitor];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center w-full min-w-full max-w-full overflow-x-clip mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-[90vmin] h-[90vmin] md:w-[35rem] md:h-[35rem]\",\n      children: [/*#__PURE__*/_jsxDEV(Clock, {\n        spin: spinClock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n        children: [/*#__PURE__*/_jsxDEV(Monitor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), deviceGroups.map((group, idx) => {\n          return /*#__PURE__*/_jsxDEV(DndIcon, {\n            iconId: group.id,\n            left: positions[idx][0],\n            top: positions[idx][1],\n            bubble: group.bubble,\n            children: /*#__PURE__*/_jsxDEV(DeviceGroup, {\n              devices: group.devices,\n              color: group.color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s2(Crown, \"xcBg+ej9svF7MLjQ5zQ5marjH60=\");\n_c = Crown;\nexport default Crown;\nvar _c;\n$RefreshReg$(_c, \"Crown\");","map":{"version":3,"names":["React","useState","Clock","DeviceGroup","DndContext","useDndMonitor","DndIcon","jsxDEV","_jsxDEV","colors","generatePositions","numGroups","radius","positions","push","theta","Math","PI","i","round","cos","toString","sin","handleDragMove","event","console","log","handleDragStart","Crown","_s2","_s","$RefreshSig$","spinClock","setSpinClock","deviceGroups","setDeviceGroups","id","color","devices","name","type","bubble","addDeviceGroup","newId","group","mergeGroups","id1","id2","removeDevice","length","handleDragOver","over","active","map","handleDragEnd","Monitor","onDragOver","onDragEnd","className","children","spin","fileName","_jsxFileName","lineNumber","columnNumber","idx","iconId","left","top","_c","$RefreshReg$"],"sources":["/Users/theopedapolu/ClipHop/frontend/src/components/Crown.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Clock from './Clock';\nimport DeviceGroup from './DeviceGroup';\nimport {DndContext, useDndMonitor} from '@dnd-kit/core';\nimport DndIcon from './DnDIcon';\n\nconst colors = ['bg-emerald-500','bg-sky-500','bg-rose-500','bg-amber-500','bg-violet-500'];\n\nfunction generatePositions(numGroups) {\n    let radius = 13;\n    let positions = [];\n    if (numGroups === 1) {\n        positions.push([[\"1/2\",\"1/2\"]]);\n    } else {\n        let theta = 2*Math.PI/numGroups;\n        for (let i = 0; i < numGroups; ++i) {\n            positions.push([(Math.round(radius*Math.cos(i*theta)) + 17.5-4).toString(),\n                (17.5-4-Math.round(radius*Math.sin(i*theta))).toString()]);\n        }\n    }\n    return positions;\n}\n\nfunction handleDragMove(event) {\n    console.log('Drag move event triggered');  \n}\n\nfunction handleDragStart(event) {\n    console.log('Drag start event triggered');\n}\n\nfunction Crown() {\n    const [spinClock,setSpinClock] = useState(true);\n    \n    const [deviceGroups, setDeviceGroups] = useState([\n        {id:1,color:'bg-rose-500',devices:[{id:0, name:'skynet', type:'A'}],bubble:false},\n        {id:2,color:'bg-blue-500',devices:[{id:1, name:'sky',type:'B'}],bubble:false},\n        {id:3,color:'bg-amber-500',devices:[{id:2, name:'skys',type:'C'}],bubble:false},\n        {id:4,color:'bg-emerald-500',devices:[{id:3, name:'skynets', type:'D'}],bubble:false}\n    ]);\n\n    \n    const addDeviceGroup = (type,name) => {\n        let newId = 1;\n        for (group of deviceGroups) {\n            if (group.id != newId) {\n                break;\n            }\n            newId += 1;\n        }\n        setDeviceGroups([...deviceGroups, {id:newId, color:colors[newId], devices:[{id:0,name:'sky',type:type}], bubble:false}]);\n    };\n\n    const mergeGroups = (id1,id2) => {\n\n    }\n\n    const removeDevice = () => {\n\n    };\n\n    let positions = generatePositions(deviceGroups.length);\n\n    function handleDragOver(event) {\n        console.log('Drag over event triggered');\n        console.log(event);\n        if (event.over == null || event.over.id === event.active.id) {\n            setDeviceGroups(deviceGroups.map((group) => {return {...group,color:colors[group.id-1],bubble:group.devices.length > 1}}))\n        } else {\n            setDeviceGroups(deviceGroups.map((group) => {\n                if (group.id === event.active.id) {\n                    return {...group,color:colors[event.over.id-1],bubble:group.devices.length > 1}\n                } else if (group.id === event.over.id) { \n                    return {...group,color:colors[event.over.id-1],bubble:true}\n                } else {\n                    return {...group,color:colors[group.id-1],bubble:group.devices.length > 1}\n                }\n            }))\n        }\n    }\n\n    function handleDragEnd(event) {\n\n    }\n\n    function Monitor() {\n        useDndMonitor({\n            onDragOver(event) {handleDragOver(event)},\n            onDragEnd(event) {handleDragEnd(event)}\n        })\n    }\n\n\n    return (\n        <div className='flex flex-col items-center w-full min-w-full max-w-full overflow-x-clip mt-5'>\n        <div className='relative w-[90vmin] h-[90vmin] md:w-[35rem] md:h-[35rem]'>\n            <Clock spin={spinClock}/>\n            <DndContext>\n            <Monitor/>\n            {deviceGroups.map((group,idx) => {\n                return (\n                <DndIcon iconId={group.id} key={idx} left={positions[idx][0]} top={positions[idx][1]} bubble={group.bubble}>\n                <DeviceGroup devices={group.devices} color={group.color}/>\n                </DndIcon>\n                )\n            })}\n            </DndContext>   \n        </div>\n        </div>\n    )\n}\n\nexport default Crown;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}