{"ast":null,"code":"var _jsxFileName = \"/Users/theopedapolu/ClipHop/frontend/src/components/DnDIcon.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDraggable } from \"@dnd-kit/core\";\nimport { useDroppable } from \"@dnd-kit/core\";\nimport Mac from './icons/Mac.js';\nimport iPhone from './icons/iPhone.js';\nimport iPad from './icons/iPad.js';\nimport Android from './icons/Android.js';\nimport PC from './icons/PC.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'A': Android,\n  'B': iPad,\n  'C': iPhone,\n  'D': Mac,\n  'E': PC\n};\nfunction DndIcon({\n  iconId,\n  devices,\n  top,\n  left,\n  color\n}) {\n  _s();\n  // Draggable state\n  const {\n    attributes,\n    listeners,\n    setNodeRef: setDragRef,\n    transform\n  } = useDraggable({\n    id: iconId\n  });\n  const style = transform ? {\n    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`\n  } : {};\n\n  // Droppable state\n  const {\n    isOver,\n    setNodeRef: setDropRef\n  } = useDroppable({\n    id: iconId\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: node => {\n      setDragRef(node);\n      setDropRef(node);\n    },\n    style: {\n      ...style,\n      position: 'absolute',\n      top: `${top}rem`,\n      left: `${left}rem`,\n      border: isOver ? '1px solid red' : 'none'\n    },\n    ...listeners,\n    ...attributes,\n    children: devices.map(device => {\n      const DeviceIcon = iconMap[device.type];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-full flex items-center justify-center ${color} w-[4.3rem] h-[4.3rem]`,\n        children: /*#__PURE__*/_jsxDEV(DeviceIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(DndIcon, \"G5fF9SmMl2dg1PcfzUEdzjaWxG0=\", false, function () {\n  return [useDraggable, useDroppable];\n});\n_c = DndIcon;\nexport default DndIcon;\nvar _c;\n$RefreshReg$(_c, \"DndIcon\");","map":{"version":3,"names":["React","useDraggable","useDroppable","Mac","iPhone","iPad","Android","PC","jsxDEV","_jsxDEV","iconMap","DndIcon","iconId","devices","top","left","color","_s","attributes","listeners","setNodeRef","setDragRef","transform","id","style","x","y","isOver","setDropRef","ref","node","position","border","children","map","device","DeviceIcon","type","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/theopedapolu/ClipHop/frontend/src/components/DnDIcon.js"],"sourcesContent":["import React from \"react\";\nimport { useDraggable } from \"@dnd-kit/core\";\nimport { useDroppable } from \"@dnd-kit/core\";\nimport Mac from './icons/Mac.js';\nimport iPhone from './icons/iPhone.js';\nimport iPad from './icons/iPad.js';\nimport Android from './icons/Android.js';\nimport PC from './icons/PC.js';\n\nconst iconMap = {\n    'A': Android,\n    'B':iPad,\n    'C':iPhone,\n    'D':Mac,\n    'E':PC\n}\n\nfunction DndIcon({iconId,devices,top,left,color}) {\n    // Draggable state\n    const {attributes, listeners, setNodeRef: setDragRef, transform} = useDraggable({\n        id:iconId\n    })\n\n    const style = transform ? {\n        transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`\n    }\n    : {};\n\n    // Droppable state\n    const {isOver,setNodeRef: setDropRef} = useDroppable({\n        id:iconId\n    });\n\n    return (\n        <div ref={node => {\n                setDragRef(node);\n                setDropRef(node);\n              }}\n        style={{...style,position:'absolute',top:`${top}rem`,left:`${left}rem`,border:isOver ? '1px solid red' : 'none'}} \n        {...listeners}\n        {... attributes} >\n            {devices.map(device => {\n                const DeviceIcon = iconMap[device.type];\n                return (\n                    <div key={device.id} className={`rounded-full flex items-center justify-center ${color} w-[4.3rem] h-[4.3rem]`}>\n                        <DeviceIcon/>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default DndIcon;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,GAAG,MAAM,gBAAgB;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,EAAE,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAG;EACZ,GAAG,EAAEJ,OAAO;EACZ,GAAG,EAACD,IAAI;EACR,GAAG,EAACD,MAAM;EACV,GAAG,EAACD,GAAG;EACP,GAAG,EAACI;AACR,CAAC;AAED,SAASI,OAAOA,CAAC;EAACC,MAAM;EAACC,OAAO;EAACC,GAAG;EAACC,IAAI;EAACC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC9C;EACA,MAAM;IAACC,UAAU;IAAEC,SAAS;IAAEC,UAAU,EAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGrB,YAAY,CAAC;IAC5EsB,EAAE,EAACX;EACP,CAAC,CAAC;EAEF,MAAMY,KAAK,GAAGF,SAAS,GAAG;IACtBA,SAAS,EAAG,eAAcA,SAAS,CAACG,CAAE,OAAMH,SAAS,CAACI,CAAE;EAC5D,CAAC,GACC,CAAC,CAAC;;EAEJ;EACA,MAAM;IAACC,MAAM;IAACP,UAAU,EAAEQ;EAAU,CAAC,GAAG1B,YAAY,CAAC;IACjDqB,EAAE,EAACX;EACP,CAAC,CAAC;EAEF,oBACIH,OAAA;IAAKoB,GAAG,EAAEC,IAAI,IAAI;MACVT,UAAU,CAACS,IAAI,CAAC;MAChBF,UAAU,CAACE,IAAI,CAAC;IAClB,CAAE;IACRN,KAAK,EAAE;MAAC,GAAGA,KAAK;MAACO,QAAQ,EAAC,UAAU;MAACjB,GAAG,EAAE,GAAEA,GAAI,KAAI;MAACC,IAAI,EAAE,GAAEA,IAAK,KAAI;MAACiB,MAAM,EAACL,MAAM,GAAG,eAAe,GAAG;IAAM,CAAE;IAAA,GAC7GR,SAAS;IAAA,GACRD,UAAU;IAAAe,QAAA,EACVpB,OAAO,CAACqB,GAAG,CAACC,MAAM,IAAI;MACnB,MAAMC,UAAU,GAAG1B,OAAO,CAACyB,MAAM,CAACE,IAAI,CAAC;MACvC,oBACI5B,OAAA;QAAqB6B,SAAS,EAAG,iDAAgDtB,KAAM,wBAAwB;QAAAiB,QAAA,eAC3GxB,OAAA,CAAC2B,UAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,GADPP,MAAM,CAACZ,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CAAC;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACzB,EAAA,CAlCQN,OAAO;EAAA,QAEuDV,YAAY,EAUvCC,YAAY;AAAA;AAAAyC,EAAA,GAZ/ChC,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}