{"ast":null,"code":"var _jsxFileName = \"/Users/theopedapolu/ClipHop/frontend/src/components/DeviceGroup.js\";\nimport React from \"react\";\nimport Mac from './icons/Mac.js';\nimport iPhone from './icons/iPhone.js';\nimport iPad from './icons/iPad.js';\nimport Android from './icons/Android.js';\nimport PC from './icons/PC.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'A': Android,\n  'B': iPad,\n  'C': iPhone,\n  'D': Mac,\n  'E': PC\n};\nfunction DeviceGroup({\n  devices,\n  color = \"bg-green-500\"\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: devices.map(device => {\n      const DeviceIcon = iconMap[device.type];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-full flex items-center justify-center ${color}`,\n        children: /*#__PURE__*/_jsxDEV(DeviceIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n}\n_c = DeviceGroup;\nexport default DeviceGroup;\nvar _c;\n$RefreshReg$(_c, \"DeviceGroup\");","map":{"version":3,"names":["React","Mac","iPhone","iPad","Android","PC","jsxDEV","_jsxDEV","Fragment","_Fragment","iconMap","DeviceGroup","devices","color","children","map","device","DeviceIcon","type","className","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/theopedapolu/ClipHop/frontend/src/components/DeviceGroup.js"],"sourcesContent":["import React from \"react\";\nimport Mac from './icons/Mac.js';\nimport iPhone from './icons/iPhone.js';\nimport iPad from './icons/iPad.js';\nimport Android from './icons/Android.js';\nimport PC from './icons/PC.js';\n\nconst iconMap = {\n    'A': Android,\n    'B':iPad,\n    'C':iPhone,\n    'D':Mac,\n    'E':PC\n}\n\nfunction DeviceGroup({devices, color=\"bg-green-500\"}) {\n    return (\n        <>\n            {devices.map(device => {\n                const DeviceIcon = iconMap[device.type];\n                return (\n                    <div key={device.id} className={`rounded-full flex items-center justify-center ${color}`}>\n                        <DeviceIcon/>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\n\nexport default DeviceGroup;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,gBAAgB;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,EAAE,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,OAAO,GAAG;EACZ,GAAG,EAAEN,OAAO;EACZ,GAAG,EAACD,IAAI;EACR,GAAG,EAACD,MAAM;EACV,GAAG,EAACD,GAAG;EACP,GAAG,EAACI;AACR,CAAC;AAED,SAASM,WAAWA,CAAC;EAACC,OAAO;EAAEC,KAAK,GAAC;AAAc,CAAC,EAAE;EAClD,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,EACKF,OAAO,CAACG,GAAG,CAACC,MAAM,IAAI;MACnB,MAAMC,UAAU,GAAGP,OAAO,CAACM,MAAM,CAACE,IAAI,CAAC;MACvC,oBACIX,OAAA;QAAqBY,SAAS,EAAG,iDAAgDN,KAAM,EAAE;QAAAC,QAAA,eACrFP,OAAA,CAACU,UAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,GADPP,MAAM,CAACQ,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CAAC;IAEd,CAAC;EAAC,gBACJ,CAAC;AAEX;AAACE,EAAA,GAbQd,WAAW;AAepB,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}