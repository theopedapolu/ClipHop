{"ast":null,"code":"var _jsxFileName = \"/Users/theopedapolu/ClipHop/frontend/src/components/Crown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Clock from './Clock';\nimport DeviceGroup from './DeviceGroup';\nimport { DndContext } from '@dnd-kit/core';\nimport Draggable from './Draggable';\nimport Droppable from './Droppable';\nimport DndIcon from './DnDIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generatePositions(numGroups) {\n  let radius = 10;\n  let positions = [];\n  if (numGroups === 1) {\n    positions.push([[\"1/2\", \"1/2\"]]);\n  } else {\n    let theta = 2 * Math.PI / numGroups;\n    for (let i = 0; i < numGroups; ++i) {\n      positions.push([(Math.round(radius * Math.cos(i * theta)) + 17.5).toString(), (17.5 - Math.round(radius * Math.sin(i * theta))).toString()]);\n    }\n  }\n  return positions;\n}\nfunction handleDragOver(event) {\n  console.log('Drag over event triggered');\n}\nfunction handleDragMove(event) {\n  console.log('Drag move event triggered');\n}\nfunction Crown() {\n  _s();\n  //const [stopClock,setStopClock] = useState(false);\n\n  const [deviceGroups, setDeviceGroups] = useState([[{\n    id: 0,\n    name: 'skynet',\n    type: 'A'\n  }], [{\n    id: 1,\n    name: 'sky',\n    type: 'B'\n  }], [{\n    id: 2,\n    name: 'skys',\n    type: 'C'\n  }], [{\n    id: 3,\n    name: 'skynets',\n    type: 'D'\n  }]]);\n\n  // const addDeviceGroup = () => {\n  //     setDeviceGroups([...deviceGroups, [{id:1, name:'sky',type:'E'}]]);\n  // };\n\n  const removeDeviceGroup = () => {};\n  let positions = generatePositions(deviceGroups.length);\n  let ids = ['a', 'b', 'c', 'd'];\n  return (\n    /*#__PURE__*/\n    // <div className='flex flex-row justify-center'>\n    // <div className='relative h-[35rem] w-[35rem]'>\n    //     <Clock/>\n    //     <DndContext onDragOver={handleDragOver} onDragEnd={handleDragEnd} onDragMove={handleDragMove}>\n    //     {deviceGroups.map((group,idx) => {\n    //         return (\n    //         <DndIcon iconId={ids[idx]} key={idx} left={positions[idx][0]} top={positions[idx][1]}>\n    //         <DeviceGroup devices={group}/>\n    //         </DndIcon>\n    //         )\n    //     })}\n    //     </DndContext>   \n    // </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"flex flex-row justify-center\",\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        onDragEnd: handleDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(Draggable, {\n          iconId: \"a\",\n          children: /*#__PURE__*/_jsxDEV(DeviceGroup, {\n            devices: deviceGroups[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          iconId: \"b\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drop zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  );\n  function handleDragEnd(event) {\n    console.log('Drag end event triggered');\n    console.log(event.active);\n    console.log(event.over);\n  }\n}\n_s(Crown, \"hYc0LTSm5p1PNJbKrA4uxC828Sc=\");\n_c = Crown;\nexport default Crown;\nvar _c;\n$RefreshReg$(_c, \"Crown\");","map":{"version":3,"names":["React","useState","Clock","DeviceGroup","DndContext","Draggable","Droppable","DndIcon","jsxDEV","_jsxDEV","generatePositions","numGroups","radius","positions","push","theta","Math","PI","i","round","cos","toString","sin","handleDragOver","event","console","log","handleDragMove","Crown","_s","deviceGroups","setDeviceGroups","id","name","type","removeDeviceGroup","length","ids","className","children","onDragEnd","handleDragEnd","iconId","devices","fileName","_jsxFileName","lineNumber","columnNumber","active","over","_c","$RefreshReg$"],"sources":["/Users/theopedapolu/ClipHop/frontend/src/components/Crown.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Clock from './Clock';\nimport DeviceGroup from './DeviceGroup';\nimport {DndContext} from '@dnd-kit/core';\nimport Draggable from './Draggable';\nimport Droppable from './Droppable';\nimport DndIcon from './DnDIcon';\n\nfunction generatePositions(numGroups) {\n    let radius = 10;\n    let positions = [];\n    if (numGroups === 1) {\n        positions.push([[\"1/2\",\"1/2\"]]);\n    } else {\n        let theta = 2*Math.PI/numGroups;\n        for (let i = 0; i < numGroups; ++i) {\n            positions.push([(Math.round(radius*Math.cos(i*theta)) + 17.5).toString(),\n                (17.5-Math.round(radius*Math.sin(i*theta))).toString()]);\n        }\n    }\n    return positions;\n}\n\nfunction handleDragOver(event) {\n    console.log('Drag over event triggered');\n}\n\nfunction handleDragMove(event) {\n    console.log('Drag move event triggered');  \n}\n\nfunction Crown() {\n    //const [stopClock,setStopClock] = useState(false);\n    \n    const [deviceGroups, setDeviceGroups] = useState([\n        [{id:0, name:'skynet', type:'A'}],\n        [{id:1, name:'sky',type:'B'}],\n        [{id:2, name:'skys',type:'C'}],\n        [{id:3, name:'skynets', type:'D'}]\n    ]);\n    \n    // const addDeviceGroup = () => {\n    //     setDeviceGroups([...deviceGroups, [{id:1, name:'sky',type:'E'}]]);\n    // };\n\n    const removeDeviceGroup = () => {\n\n    };\n\n    let positions = generatePositions(deviceGroups.length);\n    let ids = ['a','b','c','d']\n    return (\n        // <div className='flex flex-row justify-center'>\n        // <div className='relative h-[35rem] w-[35rem]'>\n        //     <Clock/>\n        //     <DndContext onDragOver={handleDragOver} onDragEnd={handleDragEnd} onDragMove={handleDragMove}>\n        //     {deviceGroups.map((group,idx) => {\n        //         return (\n        //         <DndIcon iconId={ids[idx]} key={idx} left={positions[idx][0]} top={positions[idx][1]}>\n        //         <DeviceGroup devices={group}/>\n        //         </DndIcon>\n        //         )\n        //     })}\n        //     </DndContext>   \n        // </div>\n        // </div>\n        <div className='flex flex-row justify-center'>\n            <DndContext onDragEnd={handleDragEnd}>\n            <Draggable iconId='a'>\n                <DeviceGroup devices={deviceGroups[0]}/>\n            </Draggable>\n            <Droppable iconId='b'>\n                {/* <DeviceGroup devices={deviceGroups[1]}/> */}\n                <p>Drop zone</p>\n            </Droppable>\n            </DndContext>\n        </div>\n    )\n\n    function handleDragEnd(event) {\n        console.log('Drag end event triggered');\n        console.log(event.active);\n        console.log(event.over);\n    }\n}\n\nexport default Crown;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}